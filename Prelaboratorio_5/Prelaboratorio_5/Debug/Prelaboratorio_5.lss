
Prelaboratorio_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000004f2  00000566  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000598  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007db  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f5  00000000  00000000  00000e13  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037e  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00001888  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003be  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000de  00000000  00000000  00001d16  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__vector_21>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ef       	ldi	r30, 0xF2	; 242
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  8e:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <INIT_ADC>:
    }
}


void INIT_ADC(){
	ADMUX = 0;	//Apagar todo
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	10 82       	st	Z, r1
	
	//Voltaje de referencia 5V
	ADMUX |=(1<<REFS0);
  9c:	80 81       	ld	r24, Z
  9e:	80 64       	ori	r24, 0x40	; 64
  a0:	80 83       	st	Z, r24
	
	ADMUX |= (1<<ADLAR); //orientación (izquierda)
  a2:	80 81       	ld	r24, Z
  a4:	80 62       	ori	r24, 0x20	; 32
  a6:	80 83       	st	Z, r24
	ADMUX |= (1<<MUX2) | (1<<MUX1);//Selección de canal Bit 6 del puerto C
  a8:	80 81       	ld	r24, Z
  aa:	86 60       	ori	r24, 0x06	; 6
  ac:	80 83       	st	Z, r24
	
	ADCSRA = 0;	//Apagar todo
  ae:	ea e7       	ldi	r30, 0x7A	; 122
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	10 82       	st	Z, r1
	ADCSRA |=(1<<ADPS1)	| (1 << ADPS0); //Configuración del presacaler 8
  b4:	80 81       	ld	r24, Z
  b6:	83 60       	ori	r24, 0x03	; 3
  b8:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE);	//Habilitación de interrupciones
  ba:	80 81       	ld	r24, Z
  bc:	88 60       	ori	r24, 0x08	; 8
  be:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);	//Habilitar ADS
  c0:	80 81       	ld	r24, Z
  c2:	80 68       	ori	r24, 0x80	; 128
  c4:	80 83       	st	Z, r24
  c6:	08 95       	ret

000000c8 <setup>:
void INIT_TMR1();
void INIT_ADC();


void setup(){
	cli();	//Desabilitar interrupciones
  c8:	f8 94       	cli
	//INIT_TMR1();	//Llamar a la configuración del timer
	INIT_ADC();
  ca:	0e 94 4b 00 	call	0x96	; 0x96 <INIT_ADC>
	initPWM1A();
  ce:	0e 94 bf 00 	call	0x17e	; 0x17e <initPWM1A>
	DDRB|=(1 << PORTB0);
  d2:	84 b1       	in	r24, 0x04	; 4
  d4:	81 60       	ori	r24, 0x01	; 1
  d6:	84 b9       	out	0x04, r24	; 4
	CLKPR = (1 << CLKPCE); //Habilita cambios de prescaler
  d8:	e1 e6       	ldi	r30, 0x61	; 97
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 e8       	ldi	r24, 0x80	; 128
  de:	80 83       	st	Z, r24
	CLKPR = (1 << CLKPS2);	// 1MHz
  e0:	84 e0       	ldi	r24, 0x04	; 4
  e2:	80 83       	st	Z, r24
	UCSR0B=0;	//Apagar los bit 0 y 1 del puerto D
  e4:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	sei();		//Habilita cambios de interrupción
  e8:	78 94       	sei
	
	ADCSRA |= (1 << ADSC); // Iniciar primera conversión
  ea:	ea e7       	ldi	r30, 0x7A	; 122
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 64       	ori	r24, 0x40	; 64
  f2:	80 83       	st	Z, r24
  f4:	08 95       	ret

000000f6 <main>:

}

int main(void)
{
    setup();
  f6:	0e 94 64 00 	call	0xc8	; 0xc8 <setup>
  fa:	ff cf       	rjmp	.-2      	; 0xfa <main+0x4>

000000fc <__vector_21>:
}

/*************VECTOR DE INTERRUPCIÓN************/

ISR(ADC_vect)
{
  fc:	1f 92       	push	r1
  fe:	0f 92       	push	r0
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	0f 92       	push	r0
 104:	11 24       	eor	r1, r1
 106:	2f 93       	push	r18
 108:	3f 93       	push	r19
 10a:	4f 93       	push	r20
 10c:	5f 93       	push	r21
 10e:	6f 93       	push	r22
 110:	7f 93       	push	r23
 112:	8f 93       	push	r24
 114:	9f 93       	push	r25
 116:	af 93       	push	r26
 118:	bf 93       	push	r27
 11a:	ef 93       	push	r30
 11c:	ff 93       	push	r31
	//PORTB  |= (1 << PORTB0);
	uint8_t temporal = ADCH;
 11e:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	// Mapear ADC (0-1023) a dutyCycle
	//PORTB= temporal; 
	 dutyCycle = (temporal * (225.0 / 255.0)) + 60.0;
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__floatsisf>
 12c:	22 ee       	ldi	r18, 0xE2	; 226
 12e:	31 ee       	ldi	r19, 0xE1	; 225
 130:	41 e6       	ldi	r20, 0x61	; 97
 132:	5f e3       	ldi	r21, 0x3F	; 63
 134:	0e 94 0a 02 	call	0x414	; 0x414 <__mulsf3>
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	40 e7       	ldi	r20, 0x70	; 112
 13e:	52 e4       	ldi	r21, 0x42	; 66
 140:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <__addsf3>
 144:	0e 94 4d 01 	call	0x29a	; 0x29a <__fixunssfsi>
 148:	86 2f       	mov	r24, r22
 14a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
	 updateDutyCycle(dutyCycle); // Actualizar PWM
 14e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <updateDutyCycle>

	ADCSRA |= (1 << ADSC);	//Iniciar nueva conversión
 152:	ea e7       	ldi	r30, 0x7A	; 122
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	80 64       	ori	r24, 0x40	; 64
 15a:	80 83       	st	Z, r24
}
 15c:	ff 91       	pop	r31
 15e:	ef 91       	pop	r30
 160:	bf 91       	pop	r27
 162:	af 91       	pop	r26
 164:	9f 91       	pop	r25
 166:	8f 91       	pop	r24
 168:	7f 91       	pop	r23
 16a:	6f 91       	pop	r22
 16c:	5f 91       	pop	r21
 16e:	4f 91       	pop	r20
 170:	3f 91       	pop	r19
 172:	2f 91       	pop	r18
 174:	0f 90       	pop	r0
 176:	0f be       	out	0x3f, r0	; 63
 178:	0f 90       	pop	r0
 17a:	1f 90       	pop	r1
 17c:	18 95       	reti

0000017e <initPWM1A>:
#include <avr/io.h>
#include "PWM1.h"

void initPWM1A(){
	
	DDRB |= (1 << DDB1);	//Setear bit 1 del puerto B como salida
 17e:	84 b1       	in	r24, 0x04	; 4
 180:	82 60       	ori	r24, 0x02	; 2
 182:	84 b9       	out	0x04, r24	; 4
	
	//CONFIGURACIÓN DEL TIMER 1 PARA FAST PWM CON OCR1A COMO TOP
	TCCR1A = 0;
 184:	e0 e8       	ldi	r30, 0x80	; 128
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	10 82       	st	Z, r1
	TCCR1A |= (1 << COM1A1);	//no invertido
 18a:	80 81       	ld	r24, Z
 18c:	80 68       	ori	r24, 0x80	; 128
 18e:	80 83       	st	Z, r24
	
	//Modo fast PMW y top->OCR1A (MODO 14)
	TCCR1A |= (1 << WGM11);
 190:	80 81       	ld	r24, Z
 192:	82 60       	ori	r24, 0x02	; 2
 194:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM13) | (1 << WGM12);	
 196:	e1 e8       	ldi	r30, 0x81	; 129
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	88 61       	ori	r24, 0x18	; 24
 19e:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS11);	//Prescaler de 8
 1a0:	80 81       	ld	r24, Z
 1a2:	82 60       	ori	r24, 0x02	; 2
 1a4:	80 83       	st	Z, r24
	ICR1 = 2499;	//TOP
 1a6:	83 ec       	ldi	r24, 0xC3	; 195
 1a8:	99 e0       	ldi	r25, 0x09	; 9
 1aa:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 1ae:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 1b2:	08 95       	ret

000001b4 <updateDutyCycle>:
	
}

void  updateDutyCycle(uint8_t duty){
	OCR1A = duty;
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1ba:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1be:	08 95       	ret

000001c0 <__subsf3>:
 1c0:	50 58       	subi	r21, 0x80	; 128

000001c2 <__addsf3>:
 1c2:	bb 27       	eor	r27, r27
 1c4:	aa 27       	eor	r26, r26
 1c6:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__addsf3x>
 1ca:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_round>
 1ce:	0e 94 c2 01 	call	0x384	; 0x384 <__fp_pscA>
 1d2:	38 f0       	brcs	.+14     	; 0x1e2 <__addsf3+0x20>
 1d4:	0e 94 c9 01 	call	0x392	; 0x392 <__fp_pscB>
 1d8:	20 f0       	brcs	.+8      	; 0x1e2 <__addsf3+0x20>
 1da:	39 f4       	brne	.+14     	; 0x1ea <__addsf3+0x28>
 1dc:	9f 3f       	cpi	r25, 0xFF	; 255
 1de:	19 f4       	brne	.+6      	; 0x1e6 <__addsf3+0x24>
 1e0:	26 f4       	brtc	.+8      	; 0x1ea <__addsf3+0x28>
 1e2:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_nan>
 1e6:	0e f4       	brtc	.+2      	; 0x1ea <__addsf3+0x28>
 1e8:	e0 95       	com	r30
 1ea:	e7 fb       	bst	r30, 7
 1ec:	0c 94 b9 01 	jmp	0x372	; 0x372 <__fp_inf>

000001f0 <__addsf3x>:
 1f0:	e9 2f       	mov	r30, r25
 1f2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fp_split3>
 1f6:	58 f3       	brcs	.-42     	; 0x1ce <__addsf3+0xc>
 1f8:	ba 17       	cp	r27, r26
 1fa:	62 07       	cpc	r22, r18
 1fc:	73 07       	cpc	r23, r19
 1fe:	84 07       	cpc	r24, r20
 200:	95 07       	cpc	r25, r21
 202:	20 f0       	brcs	.+8      	; 0x20c <__addsf3x+0x1c>
 204:	79 f4       	brne	.+30     	; 0x224 <__addsf3x+0x34>
 206:	a6 f5       	brtc	.+104    	; 0x270 <__addsf3x+0x80>
 208:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_zero>
 20c:	0e f4       	brtc	.+2      	; 0x210 <__addsf3x+0x20>
 20e:	e0 95       	com	r30
 210:	0b 2e       	mov	r0, r27
 212:	ba 2f       	mov	r27, r26
 214:	a0 2d       	mov	r26, r0
 216:	0b 01       	movw	r0, r22
 218:	b9 01       	movw	r22, r18
 21a:	90 01       	movw	r18, r0
 21c:	0c 01       	movw	r0, r24
 21e:	ca 01       	movw	r24, r20
 220:	a0 01       	movw	r20, r0
 222:	11 24       	eor	r1, r1
 224:	ff 27       	eor	r31, r31
 226:	59 1b       	sub	r21, r25
 228:	99 f0       	breq	.+38     	; 0x250 <__addsf3x+0x60>
 22a:	59 3f       	cpi	r21, 0xF9	; 249
 22c:	50 f4       	brcc	.+20     	; 0x242 <__addsf3x+0x52>
 22e:	50 3e       	cpi	r21, 0xE0	; 224
 230:	68 f1       	brcs	.+90     	; 0x28c <__addsf3x+0x9c>
 232:	1a 16       	cp	r1, r26
 234:	f0 40       	sbci	r31, 0x00	; 0
 236:	a2 2f       	mov	r26, r18
 238:	23 2f       	mov	r18, r19
 23a:	34 2f       	mov	r19, r20
 23c:	44 27       	eor	r20, r20
 23e:	58 5f       	subi	r21, 0xF8	; 248
 240:	f3 cf       	rjmp	.-26     	; 0x228 <__addsf3x+0x38>
 242:	46 95       	lsr	r20
 244:	37 95       	ror	r19
 246:	27 95       	ror	r18
 248:	a7 95       	ror	r26
 24a:	f0 40       	sbci	r31, 0x00	; 0
 24c:	53 95       	inc	r21
 24e:	c9 f7       	brne	.-14     	; 0x242 <__addsf3x+0x52>
 250:	7e f4       	brtc	.+30     	; 0x270 <__addsf3x+0x80>
 252:	1f 16       	cp	r1, r31
 254:	ba 0b       	sbc	r27, r26
 256:	62 0b       	sbc	r22, r18
 258:	73 0b       	sbc	r23, r19
 25a:	84 0b       	sbc	r24, r20
 25c:	ba f0       	brmi	.+46     	; 0x28c <__addsf3x+0x9c>
 25e:	91 50       	subi	r25, 0x01	; 1
 260:	a1 f0       	breq	.+40     	; 0x28a <__addsf3x+0x9a>
 262:	ff 0f       	add	r31, r31
 264:	bb 1f       	adc	r27, r27
 266:	66 1f       	adc	r22, r22
 268:	77 1f       	adc	r23, r23
 26a:	88 1f       	adc	r24, r24
 26c:	c2 f7       	brpl	.-16     	; 0x25e <__addsf3x+0x6e>
 26e:	0e c0       	rjmp	.+28     	; 0x28c <__addsf3x+0x9c>
 270:	ba 0f       	add	r27, r26
 272:	62 1f       	adc	r22, r18
 274:	73 1f       	adc	r23, r19
 276:	84 1f       	adc	r24, r20
 278:	48 f4       	brcc	.+18     	; 0x28c <__addsf3x+0x9c>
 27a:	87 95       	ror	r24
 27c:	77 95       	ror	r23
 27e:	67 95       	ror	r22
 280:	b7 95       	ror	r27
 282:	f7 95       	ror	r31
 284:	9e 3f       	cpi	r25, 0xFE	; 254
 286:	08 f0       	brcs	.+2      	; 0x28a <__addsf3x+0x9a>
 288:	b0 cf       	rjmp	.-160    	; 0x1ea <__addsf3+0x28>
 28a:	93 95       	inc	r25
 28c:	88 0f       	add	r24, r24
 28e:	08 f0       	brcs	.+2      	; 0x292 <__addsf3x+0xa2>
 290:	99 27       	eor	r25, r25
 292:	ee 0f       	add	r30, r30
 294:	97 95       	ror	r25
 296:	87 95       	ror	r24
 298:	08 95       	ret

0000029a <__fixunssfsi>:
 29a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__fp_splitA>
 29e:	88 f0       	brcs	.+34     	; 0x2c2 <__fixunssfsi+0x28>
 2a0:	9f 57       	subi	r25, 0x7F	; 127
 2a2:	98 f0       	brcs	.+38     	; 0x2ca <__fixunssfsi+0x30>
 2a4:	b9 2f       	mov	r27, r25
 2a6:	99 27       	eor	r25, r25
 2a8:	b7 51       	subi	r27, 0x17	; 23
 2aa:	b0 f0       	brcs	.+44     	; 0x2d8 <__fixunssfsi+0x3e>
 2ac:	e1 f0       	breq	.+56     	; 0x2e6 <__fixunssfsi+0x4c>
 2ae:	66 0f       	add	r22, r22
 2b0:	77 1f       	adc	r23, r23
 2b2:	88 1f       	adc	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	1a f0       	brmi	.+6      	; 0x2be <__fixunssfsi+0x24>
 2b8:	ba 95       	dec	r27
 2ba:	c9 f7       	brne	.-14     	; 0x2ae <__fixunssfsi+0x14>
 2bc:	14 c0       	rjmp	.+40     	; 0x2e6 <__fixunssfsi+0x4c>
 2be:	b1 30       	cpi	r27, 0x01	; 1
 2c0:	91 f0       	breq	.+36     	; 0x2e6 <__fixunssfsi+0x4c>
 2c2:	0e 94 03 02 	call	0x406	; 0x406 <__fp_zero>
 2c6:	b1 e0       	ldi	r27, 0x01	; 1
 2c8:	08 95       	ret
 2ca:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_zero>
 2ce:	67 2f       	mov	r22, r23
 2d0:	78 2f       	mov	r23, r24
 2d2:	88 27       	eor	r24, r24
 2d4:	b8 5f       	subi	r27, 0xF8	; 248
 2d6:	39 f0       	breq	.+14     	; 0x2e6 <__fixunssfsi+0x4c>
 2d8:	b9 3f       	cpi	r27, 0xF9	; 249
 2da:	cc f3       	brlt	.-14     	; 0x2ce <__fixunssfsi+0x34>
 2dc:	86 95       	lsr	r24
 2de:	77 95       	ror	r23
 2e0:	67 95       	ror	r22
 2e2:	b3 95       	inc	r27
 2e4:	d9 f7       	brne	.-10     	; 0x2dc <__fixunssfsi+0x42>
 2e6:	3e f4       	brtc	.+14     	; 0x2f6 <__fixunssfsi+0x5c>
 2e8:	90 95       	com	r25
 2ea:	80 95       	com	r24
 2ec:	70 95       	com	r23
 2ee:	61 95       	neg	r22
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255
 2f2:	8f 4f       	sbci	r24, 0xFF	; 255
 2f4:	9f 4f       	sbci	r25, 0xFF	; 255
 2f6:	08 95       	ret

000002f8 <__floatunsisf>:
 2f8:	e8 94       	clt
 2fa:	09 c0       	rjmp	.+18     	; 0x30e <__floatsisf+0x12>

000002fc <__floatsisf>:
 2fc:	97 fb       	bst	r25, 7
 2fe:	3e f4       	brtc	.+14     	; 0x30e <__floatsisf+0x12>
 300:	90 95       	com	r25
 302:	80 95       	com	r24
 304:	70 95       	com	r23
 306:	61 95       	neg	r22
 308:	7f 4f       	sbci	r23, 0xFF	; 255
 30a:	8f 4f       	sbci	r24, 0xFF	; 255
 30c:	9f 4f       	sbci	r25, 0xFF	; 255
 30e:	99 23       	and	r25, r25
 310:	a9 f0       	breq	.+42     	; 0x33c <__floatsisf+0x40>
 312:	f9 2f       	mov	r31, r25
 314:	96 e9       	ldi	r25, 0x96	; 150
 316:	bb 27       	eor	r27, r27
 318:	93 95       	inc	r25
 31a:	f6 95       	lsr	r31
 31c:	87 95       	ror	r24
 31e:	77 95       	ror	r23
 320:	67 95       	ror	r22
 322:	b7 95       	ror	r27
 324:	f1 11       	cpse	r31, r1
 326:	f8 cf       	rjmp	.-16     	; 0x318 <__floatsisf+0x1c>
 328:	fa f4       	brpl	.+62     	; 0x368 <__floatsisf+0x6c>
 32a:	bb 0f       	add	r27, r27
 32c:	11 f4       	brne	.+4      	; 0x332 <__floatsisf+0x36>
 32e:	60 ff       	sbrs	r22, 0
 330:	1b c0       	rjmp	.+54     	; 0x368 <__floatsisf+0x6c>
 332:	6f 5f       	subi	r22, 0xFF	; 255
 334:	7f 4f       	sbci	r23, 0xFF	; 255
 336:	8f 4f       	sbci	r24, 0xFF	; 255
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	16 c0       	rjmp	.+44     	; 0x368 <__floatsisf+0x6c>
 33c:	88 23       	and	r24, r24
 33e:	11 f0       	breq	.+4      	; 0x344 <__floatsisf+0x48>
 340:	96 e9       	ldi	r25, 0x96	; 150
 342:	11 c0       	rjmp	.+34     	; 0x366 <__floatsisf+0x6a>
 344:	77 23       	and	r23, r23
 346:	21 f0       	breq	.+8      	; 0x350 <__floatsisf+0x54>
 348:	9e e8       	ldi	r25, 0x8E	; 142
 34a:	87 2f       	mov	r24, r23
 34c:	76 2f       	mov	r23, r22
 34e:	05 c0       	rjmp	.+10     	; 0x35a <__floatsisf+0x5e>
 350:	66 23       	and	r22, r22
 352:	71 f0       	breq	.+28     	; 0x370 <__floatsisf+0x74>
 354:	96 e8       	ldi	r25, 0x86	; 134
 356:	86 2f       	mov	r24, r22
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	2a f0       	brmi	.+10     	; 0x368 <__floatsisf+0x6c>
 35e:	9a 95       	dec	r25
 360:	66 0f       	add	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	da f7       	brpl	.-10     	; 0x35e <__floatsisf+0x62>
 368:	88 0f       	add	r24, r24
 36a:	96 95       	lsr	r25
 36c:	87 95       	ror	r24
 36e:	97 f9       	bld	r25, 7
 370:	08 95       	ret

00000372 <__fp_inf>:
 372:	97 f9       	bld	r25, 7
 374:	9f 67       	ori	r25, 0x7F	; 127
 376:	80 e8       	ldi	r24, 0x80	; 128
 378:	70 e0       	ldi	r23, 0x00	; 0
 37a:	60 e0       	ldi	r22, 0x00	; 0
 37c:	08 95       	ret

0000037e <__fp_nan>:
 37e:	9f ef       	ldi	r25, 0xFF	; 255
 380:	80 ec       	ldi	r24, 0xC0	; 192
 382:	08 95       	ret

00000384 <__fp_pscA>:
 384:	00 24       	eor	r0, r0
 386:	0a 94       	dec	r0
 388:	16 16       	cp	r1, r22
 38a:	17 06       	cpc	r1, r23
 38c:	18 06       	cpc	r1, r24
 38e:	09 06       	cpc	r0, r25
 390:	08 95       	ret

00000392 <__fp_pscB>:
 392:	00 24       	eor	r0, r0
 394:	0a 94       	dec	r0
 396:	12 16       	cp	r1, r18
 398:	13 06       	cpc	r1, r19
 39a:	14 06       	cpc	r1, r20
 39c:	05 06       	cpc	r0, r21
 39e:	08 95       	ret

000003a0 <__fp_round>:
 3a0:	09 2e       	mov	r0, r25
 3a2:	03 94       	inc	r0
 3a4:	00 0c       	add	r0, r0
 3a6:	11 f4       	brne	.+4      	; 0x3ac <__fp_round+0xc>
 3a8:	88 23       	and	r24, r24
 3aa:	52 f0       	brmi	.+20     	; 0x3c0 <__fp_round+0x20>
 3ac:	bb 0f       	add	r27, r27
 3ae:	40 f4       	brcc	.+16     	; 0x3c0 <__fp_round+0x20>
 3b0:	bf 2b       	or	r27, r31
 3b2:	11 f4       	brne	.+4      	; 0x3b8 <__fp_round+0x18>
 3b4:	60 ff       	sbrs	r22, 0
 3b6:	04 c0       	rjmp	.+8      	; 0x3c0 <__fp_round+0x20>
 3b8:	6f 5f       	subi	r22, 0xFF	; 255
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	8f 4f       	sbci	r24, 0xFF	; 255
 3be:	9f 4f       	sbci	r25, 0xFF	; 255
 3c0:	08 95       	ret

000003c2 <__fp_split3>:
 3c2:	57 fd       	sbrc	r21, 7
 3c4:	90 58       	subi	r25, 0x80	; 128
 3c6:	44 0f       	add	r20, r20
 3c8:	55 1f       	adc	r21, r21
 3ca:	59 f0       	breq	.+22     	; 0x3e2 <__fp_splitA+0x10>
 3cc:	5f 3f       	cpi	r21, 0xFF	; 255
 3ce:	71 f0       	breq	.+28     	; 0x3ec <__fp_splitA+0x1a>
 3d0:	47 95       	ror	r20

000003d2 <__fp_splitA>:
 3d2:	88 0f       	add	r24, r24
 3d4:	97 fb       	bst	r25, 7
 3d6:	99 1f       	adc	r25, r25
 3d8:	61 f0       	breq	.+24     	; 0x3f2 <__fp_splitA+0x20>
 3da:	9f 3f       	cpi	r25, 0xFF	; 255
 3dc:	79 f0       	breq	.+30     	; 0x3fc <__fp_splitA+0x2a>
 3de:	87 95       	ror	r24
 3e0:	08 95       	ret
 3e2:	12 16       	cp	r1, r18
 3e4:	13 06       	cpc	r1, r19
 3e6:	14 06       	cpc	r1, r20
 3e8:	55 1f       	adc	r21, r21
 3ea:	f2 cf       	rjmp	.-28     	; 0x3d0 <__fp_split3+0xe>
 3ec:	46 95       	lsr	r20
 3ee:	f1 df       	rcall	.-30     	; 0x3d2 <__fp_splitA>
 3f0:	08 c0       	rjmp	.+16     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3f2:	16 16       	cp	r1, r22
 3f4:	17 06       	cpc	r1, r23
 3f6:	18 06       	cpc	r1, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	f1 cf       	rjmp	.-30     	; 0x3de <__fp_splitA+0xc>
 3fc:	86 95       	lsr	r24
 3fe:	71 05       	cpc	r23, r1
 400:	61 05       	cpc	r22, r1
 402:	08 94       	sec
 404:	08 95       	ret

00000406 <__fp_zero>:
 406:	e8 94       	clt

00000408 <__fp_szero>:
 408:	bb 27       	eor	r27, r27
 40a:	66 27       	eor	r22, r22
 40c:	77 27       	eor	r23, r23
 40e:	cb 01       	movw	r24, r22
 410:	97 f9       	bld	r25, 7
 412:	08 95       	ret

00000414 <__mulsf3>:
 414:	0e 94 1d 02 	call	0x43a	; 0x43a <__mulsf3x>
 418:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_round>
 41c:	0e 94 c2 01 	call	0x384	; 0x384 <__fp_pscA>
 420:	38 f0       	brcs	.+14     	; 0x430 <__mulsf3+0x1c>
 422:	0e 94 c9 01 	call	0x392	; 0x392 <__fp_pscB>
 426:	20 f0       	brcs	.+8      	; 0x430 <__mulsf3+0x1c>
 428:	95 23       	and	r25, r21
 42a:	11 f0       	breq	.+4      	; 0x430 <__mulsf3+0x1c>
 42c:	0c 94 b9 01 	jmp	0x372	; 0x372 <__fp_inf>
 430:	0c 94 bf 01 	jmp	0x37e	; 0x37e <__fp_nan>
 434:	11 24       	eor	r1, r1
 436:	0c 94 04 02 	jmp	0x408	; 0x408 <__fp_szero>

0000043a <__mulsf3x>:
 43a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fp_split3>
 43e:	70 f3       	brcs	.-36     	; 0x41c <__mulsf3+0x8>

00000440 <__mulsf3_pse>:
 440:	95 9f       	mul	r25, r21
 442:	c1 f3       	breq	.-16     	; 0x434 <__mulsf3+0x20>
 444:	95 0f       	add	r25, r21
 446:	50 e0       	ldi	r21, 0x00	; 0
 448:	55 1f       	adc	r21, r21
 44a:	62 9f       	mul	r22, r18
 44c:	f0 01       	movw	r30, r0
 44e:	72 9f       	mul	r23, r18
 450:	bb 27       	eor	r27, r27
 452:	f0 0d       	add	r31, r0
 454:	b1 1d       	adc	r27, r1
 456:	63 9f       	mul	r22, r19
 458:	aa 27       	eor	r26, r26
 45a:	f0 0d       	add	r31, r0
 45c:	b1 1d       	adc	r27, r1
 45e:	aa 1f       	adc	r26, r26
 460:	64 9f       	mul	r22, r20
 462:	66 27       	eor	r22, r22
 464:	b0 0d       	add	r27, r0
 466:	a1 1d       	adc	r26, r1
 468:	66 1f       	adc	r22, r22
 46a:	82 9f       	mul	r24, r18
 46c:	22 27       	eor	r18, r18
 46e:	b0 0d       	add	r27, r0
 470:	a1 1d       	adc	r26, r1
 472:	62 1f       	adc	r22, r18
 474:	73 9f       	mul	r23, r19
 476:	b0 0d       	add	r27, r0
 478:	a1 1d       	adc	r26, r1
 47a:	62 1f       	adc	r22, r18
 47c:	83 9f       	mul	r24, r19
 47e:	a0 0d       	add	r26, r0
 480:	61 1d       	adc	r22, r1
 482:	22 1f       	adc	r18, r18
 484:	74 9f       	mul	r23, r20
 486:	33 27       	eor	r19, r19
 488:	a0 0d       	add	r26, r0
 48a:	61 1d       	adc	r22, r1
 48c:	23 1f       	adc	r18, r19
 48e:	84 9f       	mul	r24, r20
 490:	60 0d       	add	r22, r0
 492:	21 1d       	adc	r18, r1
 494:	82 2f       	mov	r24, r18
 496:	76 2f       	mov	r23, r22
 498:	6a 2f       	mov	r22, r26
 49a:	11 24       	eor	r1, r1
 49c:	9f 57       	subi	r25, 0x7F	; 127
 49e:	50 40       	sbci	r21, 0x00	; 0
 4a0:	9a f0       	brmi	.+38     	; 0x4c8 <__mulsf3_pse+0x88>
 4a2:	f1 f0       	breq	.+60     	; 0x4e0 <__mulsf3_pse+0xa0>
 4a4:	88 23       	and	r24, r24
 4a6:	4a f0       	brmi	.+18     	; 0x4ba <__mulsf3_pse+0x7a>
 4a8:	ee 0f       	add	r30, r30
 4aa:	ff 1f       	adc	r31, r31
 4ac:	bb 1f       	adc	r27, r27
 4ae:	66 1f       	adc	r22, r22
 4b0:	77 1f       	adc	r23, r23
 4b2:	88 1f       	adc	r24, r24
 4b4:	91 50       	subi	r25, 0x01	; 1
 4b6:	50 40       	sbci	r21, 0x00	; 0
 4b8:	a9 f7       	brne	.-22     	; 0x4a4 <__mulsf3_pse+0x64>
 4ba:	9e 3f       	cpi	r25, 0xFE	; 254
 4bc:	51 05       	cpc	r21, r1
 4be:	80 f0       	brcs	.+32     	; 0x4e0 <__mulsf3_pse+0xa0>
 4c0:	0c 94 b9 01 	jmp	0x372	; 0x372 <__fp_inf>
 4c4:	0c 94 04 02 	jmp	0x408	; 0x408 <__fp_szero>
 4c8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ca:	e4 f3       	brlt	.-8      	; 0x4c4 <__mulsf3_pse+0x84>
 4cc:	98 3e       	cpi	r25, 0xE8	; 232
 4ce:	d4 f3       	brlt	.-12     	; 0x4c4 <__mulsf3_pse+0x84>
 4d0:	86 95       	lsr	r24
 4d2:	77 95       	ror	r23
 4d4:	67 95       	ror	r22
 4d6:	b7 95       	ror	r27
 4d8:	f7 95       	ror	r31
 4da:	e7 95       	ror	r30
 4dc:	9f 5f       	subi	r25, 0xFF	; 255
 4de:	c1 f7       	brne	.-16     	; 0x4d0 <__mulsf3_pse+0x90>
 4e0:	fe 2b       	or	r31, r30
 4e2:	88 0f       	add	r24, r24
 4e4:	91 1d       	adc	r25, r1
 4e6:	96 95       	lsr	r25
 4e8:	87 95       	ror	r24
 4ea:	97 f9       	bld	r25, 7
 4ec:	08 95       	ret

000004ee <_exit>:
 4ee:	f8 94       	cli

000004f0 <__stop_program>:
 4f0:	ff cf       	rjmp	.-2      	; 0x4f0 <__stop_program>
